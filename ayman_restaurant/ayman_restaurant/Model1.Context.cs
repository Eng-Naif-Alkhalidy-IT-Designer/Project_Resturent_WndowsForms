//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ayman_restaurant
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class restaurantEntities : DbContext
    {
        public restaurantEntities()
            : base("name=restaurantEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<itemsinfo> itemsinfoes { get; set; }
        public virtual DbSet<purchasing> purchasings { get; set; }
        public virtual DbSet<supplier> suppliers { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<user> users { get; set; }
        public virtual DbSet<tblbill> tblbills { get; set; }
    
        public virtual int del_bill(Nullable<int> p_id)
        {
            var p_idParameter = p_id.HasValue ?
                new ObjectParameter("p_id", p_id) :
                new ObjectParameter("p_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("del_bill", p_idParameter);
        }
    
        public virtual int del_itemsinfo(Nullable<int> p_id)
        {
            var p_idParameter = p_id.HasValue ?
                new ObjectParameter("p_id", p_id) :
                new ObjectParameter("p_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("del_itemsinfo", p_idParameter);
        }
    
        public virtual int del_supplier(Nullable<int> p_id)
        {
            var p_idParameter = p_id.HasValue ?
                new ObjectParameter("p_id", p_id) :
                new ObjectParameter("p_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("del_supplier", p_idParameter);
        }
    
        public virtual int del_user(Nullable<int> p_id)
        {
            var p_idParameter = p_id.HasValue ?
                new ObjectParameter("p_id", p_id) :
                new ObjectParameter("p_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("del_user", p_idParameter);
        }
    
        public virtual ObjectResult<dgv_item_Result> dgv_item()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dgv_item_Result>("dgv_item");
        }
    
        public virtual int insert_bill(string p_name, Nullable<int> p_units, Nullable<int> p_unit_price, Nullable<int> p_unit_total, Nullable<int> p_discount, Nullable<int> p_net, Nullable<System.DateTime> p_bill)
        {
            var p_nameParameter = p_name != null ?
                new ObjectParameter("p_name", p_name) :
                new ObjectParameter("p_name", typeof(string));
    
            var p_unitsParameter = p_units.HasValue ?
                new ObjectParameter("p_units", p_units) :
                new ObjectParameter("p_units", typeof(int));
    
            var p_unit_priceParameter = p_unit_price.HasValue ?
                new ObjectParameter("p_unit_price", p_unit_price) :
                new ObjectParameter("p_unit_price", typeof(int));
    
            var p_unit_totalParameter = p_unit_total.HasValue ?
                new ObjectParameter("p_unit_total", p_unit_total) :
                new ObjectParameter("p_unit_total", typeof(int));
    
            var p_discountParameter = p_discount.HasValue ?
                new ObjectParameter("p_discount", p_discount) :
                new ObjectParameter("p_discount", typeof(int));
    
            var p_netParameter = p_net.HasValue ?
                new ObjectParameter("p_net", p_net) :
                new ObjectParameter("p_net", typeof(int));
    
            var p_billParameter = p_bill.HasValue ?
                new ObjectParameter("p_bill", p_bill) :
                new ObjectParameter("p_bill", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_bill", p_nameParameter, p_unitsParameter, p_unit_priceParameter, p_unit_totalParameter, p_discountParameter, p_netParameter, p_billParameter);
        }
    
        public virtual int insert_itemsinfo(string p_item, string p_category, string p_department, Nullable<int> p_price)
        {
            var p_itemParameter = p_item != null ?
                new ObjectParameter("p_item", p_item) :
                new ObjectParameter("p_item", typeof(string));
    
            var p_categoryParameter = p_category != null ?
                new ObjectParameter("p_category", p_category) :
                new ObjectParameter("p_category", typeof(string));
    
            var p_departmentParameter = p_department != null ?
                new ObjectParameter("p_department", p_department) :
                new ObjectParameter("p_department", typeof(string));
    
            var p_priceParameter = p_price.HasValue ?
                new ObjectParameter("p_price", p_price) :
                new ObjectParameter("p_price", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_itemsinfo", p_itemParameter, p_categoryParameter, p_departmentParameter, p_priceParameter);
        }
    
        public virtual int insert_supplier(string p_name, string p_address, Nullable<int> p_phon, string p_fex, string p_company)
        {
            var p_nameParameter = p_name != null ?
                new ObjectParameter("p_name", p_name) :
                new ObjectParameter("p_name", typeof(string));
    
            var p_addressParameter = p_address != null ?
                new ObjectParameter("p_address", p_address) :
                new ObjectParameter("p_address", typeof(string));
    
            var p_phonParameter = p_phon.HasValue ?
                new ObjectParameter("p_phon", p_phon) :
                new ObjectParameter("p_phon", typeof(int));
    
            var p_fexParameter = p_fex != null ?
                new ObjectParameter("p_fex", p_fex) :
                new ObjectParameter("p_fex", typeof(string));
    
            var p_companyParameter = p_company != null ?
                new ObjectParameter("p_company", p_company) :
                new ObjectParameter("p_company", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_supplier", p_nameParameter, p_addressParameter, p_phonParameter, p_fexParameter, p_companyParameter);
        }
    
        public virtual int insert_user(string name, string pass, string user, string supplier, string pur, string bill, string product)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("supplier", supplier) :
                new ObjectParameter("supplier", typeof(string));
    
            var purParameter = pur != null ?
                new ObjectParameter("pur", pur) :
                new ObjectParameter("pur", typeof(string));
    
            var billParameter = bill != null ?
                new ObjectParameter("bill", bill) :
                new ObjectParameter("bill", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("product", product) :
                new ObjectParameter("product", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_user", nameParameter, passParameter, userParameter, supplierParameter, purParameter, billParameter, productParameter);
        }
    
        public virtual ObjectResult<string> select_category()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("select_category");
        }
    
        public virtual ObjectResult<string> select_department()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("select_department");
        }
    
        public virtual ObjectResult<select_item_Result> select_item(Nullable<int> p_id)
        {
            var p_idParameter = p_id.HasValue ?
                new ObjectParameter("p_id", p_id) :
                new ObjectParameter("p_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<select_item_Result>("select_item", p_idParameter);
        }
    
        public virtual ObjectResult<select_itemsinfo_Result> select_itemsinfo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<select_itemsinfo_Result>("select_itemsinfo");
        }
    
        public virtual ObjectResult<select_supplier_Result> select_supplier()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<select_supplier_Result>("select_supplier");
        }
    
        public virtual ObjectResult<select_user_Result> select_user()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<select_user_Result>("select_user");
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int update_bill(Nullable<int> id, string p_name, Nullable<int> p_units, Nullable<int> p_unit_price, Nullable<int> p_unit_total, Nullable<int> p_discount, Nullable<int> p_net, Nullable<System.DateTime> p_bill)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var p_nameParameter = p_name != null ?
                new ObjectParameter("p_name", p_name) :
                new ObjectParameter("p_name", typeof(string));
    
            var p_unitsParameter = p_units.HasValue ?
                new ObjectParameter("p_units", p_units) :
                new ObjectParameter("p_units", typeof(int));
    
            var p_unit_priceParameter = p_unit_price.HasValue ?
                new ObjectParameter("p_unit_price", p_unit_price) :
                new ObjectParameter("p_unit_price", typeof(int));
    
            var p_unit_totalParameter = p_unit_total.HasValue ?
                new ObjectParameter("p_unit_total", p_unit_total) :
                new ObjectParameter("p_unit_total", typeof(int));
    
            var p_discountParameter = p_discount.HasValue ?
                new ObjectParameter("p_discount", p_discount) :
                new ObjectParameter("p_discount", typeof(int));
    
            var p_netParameter = p_net.HasValue ?
                new ObjectParameter("p_net", p_net) :
                new ObjectParameter("p_net", typeof(int));
    
            var p_billParameter = p_bill.HasValue ?
                new ObjectParameter("p_bill", p_bill) :
                new ObjectParameter("p_bill", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_bill", idParameter, p_nameParameter, p_unitsParameter, p_unit_priceParameter, p_unit_totalParameter, p_discountParameter, p_netParameter, p_billParameter);
        }
    
        public virtual int update_itemsinfo(Nullable<int> p_id, string p_item, string p_category, string p_department, Nullable<int> p_price)
        {
            var p_idParameter = p_id.HasValue ?
                new ObjectParameter("p_id", p_id) :
                new ObjectParameter("p_id", typeof(int));
    
            var p_itemParameter = p_item != null ?
                new ObjectParameter("p_item", p_item) :
                new ObjectParameter("p_item", typeof(string));
    
            var p_categoryParameter = p_category != null ?
                new ObjectParameter("p_category", p_category) :
                new ObjectParameter("p_category", typeof(string));
    
            var p_departmentParameter = p_department != null ?
                new ObjectParameter("p_department", p_department) :
                new ObjectParameter("p_department", typeof(string));
    
            var p_priceParameter = p_price.HasValue ?
                new ObjectParameter("p_price", p_price) :
                new ObjectParameter("p_price", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_itemsinfo", p_idParameter, p_itemParameter, p_categoryParameter, p_departmentParameter, p_priceParameter);
        }
    
        public virtual int update_supplier(Nullable<int> p_id, string p_name, string p_address, Nullable<int> p_phon, string p_fex, string p_company)
        {
            var p_idParameter = p_id.HasValue ?
                new ObjectParameter("p_id", p_id) :
                new ObjectParameter("p_id", typeof(int));
    
            var p_nameParameter = p_name != null ?
                new ObjectParameter("p_name", p_name) :
                new ObjectParameter("p_name", typeof(string));
    
            var p_addressParameter = p_address != null ?
                new ObjectParameter("p_address", p_address) :
                new ObjectParameter("p_address", typeof(string));
    
            var p_phonParameter = p_phon.HasValue ?
                new ObjectParameter("p_phon", p_phon) :
                new ObjectParameter("p_phon", typeof(int));
    
            var p_fexParameter = p_fex != null ?
                new ObjectParameter("p_fex", p_fex) :
                new ObjectParameter("p_fex", typeof(string));
    
            var p_companyParameter = p_company != null ?
                new ObjectParameter("p_company", p_company) :
                new ObjectParameter("p_company", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_supplier", p_idParameter, p_nameParameter, p_addressParameter, p_phonParameter, p_fexParameter, p_companyParameter);
        }
    
        public virtual int update_user(Nullable<int> p_id, string name, string pass, string user, string supplier, string pur, string bill, string product)
        {
            var p_idParameter = p_id.HasValue ?
                new ObjectParameter("p_id", p_id) :
                new ObjectParameter("p_id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("supplier", supplier) :
                new ObjectParameter("supplier", typeof(string));
    
            var purParameter = pur != null ?
                new ObjectParameter("pur", pur) :
                new ObjectParameter("pur", typeof(string));
    
            var billParameter = bill != null ?
                new ObjectParameter("bill", bill) :
                new ObjectParameter("bill", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("product", product) :
                new ObjectParameter("product", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_user", p_idParameter, nameParameter, passParameter, userParameter, supplierParameter, purParameter, billParameter, productParameter);
        }
    
        public virtual ObjectResult<select_purchasing_Result> select_purchasing()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<select_purchasing_Result>("select_purchasing");
        }
    
        public virtual ObjectResult<user_data_Result> user_data(string nama)
        {
            var namaParameter = nama != null ?
                new ObjectParameter("nama", nama) :
                new ObjectParameter("nama", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<user_data_Result>("user_data", namaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> max_bill_id()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("max_bill_id");
        }
    }
}
